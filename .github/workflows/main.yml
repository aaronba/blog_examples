# This is a basic workflow to help you get started with Actions

name: MSBUILD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Setup MSBuild.exe
      uses: warrenbuckley/Setup-MSBuild@v1

    #- name: MSBuild SLN
    #  working-directory: plugin_unit_test_examples
    #  run: msbuild plugin_unit_test_examples.sln
    
    - name: MSBuild UnitTests
      working-directory: plugin_unit_test_examples/UnitTests
      run: msbuild UnitTests.csproj
    
   # - name: Enumerate all output files
   #   working-directory: plugin_unit_test_examples/UnitTests
   #   run: Get-ChildItem -Recurse
    
    - name: Test UnitTests
      run: 
       Set-Location -Path ${Env:ProgramFiles(x86)} -PassThru; Set-Location -Path 'Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\TestWindow' -PassThru; .\VSTest.Console.exe D:\a\blog_examples\blog_examples\plugin_unit_test_examples\UnitTests\bin\Debug\UnitTests.dll /Logger:trx`;LogFileName=UnitTests.trx
